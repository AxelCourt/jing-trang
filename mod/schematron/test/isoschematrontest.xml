<testSuite>
<testCase>
<correct>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
<pattern id="Print_both_cases">
<rule context="AAA">
<assert test="BBB">BBB element is missing.</assert>
<report test="BBB">BBB element is present.</report>

<assert test="@name">AAA misses attribute name.</assert>
<report test="@name">AAA contains attribute name.</report>
</rule>
</pattern>

<pattern id="Print_positive_result_only">
<rule context="AAA">
<report test="BBB">BBB element is present.</report>
<report test="@name">AAA contains attribute name.</report>
</rule>
</pattern>

<pattern id="Print_negative_result_only">
<rule context="AAA">
<assert test="BBB">BBB element is missing.</assert>
<assert test="@name">AAA misses attribute name.</assert>
</rule>
</pattern>
</schema>
</correct>
<invalid>

<AAA>
	<BBB/>
</AAA>
</invalid>
<invalid>

<AAA>
	<CCC/>
</AAA>
</invalid>
</testCase>
<testCase>
<correct>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
<pattern id="Open_model">
<rule context="AAA">
<assert test="BBB"> BBB element is not present</assert>
<assert test="CCC"> CCC element is not present</assert>
</rule>
</pattern>

<pattern id="Closed_model">
<rule context="AAA">
<assert test="BBB"> BBB element is not present</assert>
<assert test="CCC"> CCC element is not present</assert>
<assert test="count(BBB|CCC) = count (*)">There is an extra element</assert>
</rule>
</pattern>

</schema></correct>
<invalid>

<AAA>
	<BBB/>
</AAA>
</invalid>
<invalid>

<AAA>
	<BBB/>
	<DDD/>
</AAA>
</invalid>
</testCase>
<testCase>
<correct>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
<pattern id="Attribute_test">
<rule context="CCC">
<assert test="@name">attribute name is not present</assert>
<report test="@name">attribute name is present</report>
</rule>
</pattern>
</schema></correct>
<invalid>

<AAA>
	<BBB>
		<CCC/>
		<CCC/>
	</BBB>
	<CCC name="c1"/>
	<CCC name="c2"/>
</AAA>
</invalid>
</testCase>
<testCase>
<correct>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
<pattern id="Root_test">
<rule context="/*">
<assert test="name()='AAA'">Root element is <name/>, not AAA</assert>
<report test="name()='AAA'">Root element is AAA</report>
</rule>
</pattern>
</schema></correct>
<invalid>

<AAA>
	<BBB>
		<CCC/>
		<CCC/>
	</BBB>
</AAA>
</invalid>
<invalid>


<XXX>
	<BBB>
		<CCC/>
		<CCC/>
	</BBB>
</XXX>
</invalid>
</testCase>
<testCase>
<correct>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
<pattern id="Select_empty_elements_CCC">
<rule context="CCC">
<assert test="normalize-space(.) and *">Source contains an empty element CCC </assert>

<report test="normalize-space(.) = ''">[1]An element CCC  does not contain any text</report>
<assert test="normalize-space(.)">[2]An element CCC  does not contain any text</assert>

<report test="not(*)">[1]An element CCC  does not contain any child element</report>
<assert test="*">[2]An element CCC  does not contain any child element</assert>
</rule>
</pattern>
</schema></correct>
<invalid>

<AAA>
	<BBB>
		<CCC/>
	</BBB>
</AAA>
</invalid>
<invalid>

<AAA>
	<BBB>
		<CCC>I am CCC element</CCC>
	</BBB>
</AAA>
</invalid>
<invalid>

<AAA>
	<BBB>
		<CCC>
			<DDD/>
		</CCC>
	</BBB>
</AAA>
</invalid>
</testCase>
<testCase>
<correct>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
<pattern id="Predefined_values">
<rule context="AAA">
<report test="normalize-space(.) = 'aaa' or normalize-space(.) = 'bbb'">O.K.</report>
<assert test="normalize-space(.) = 'aaa' or normalize-space(.) = 'bbb'">The AAA value is not permitted.</assert>
</rule>
</pattern>
</schema></correct>
<invalid>

<AAA>
aaa
</AAA>
</invalid>
<invalid>

<AAA>
		bbb
</AAA>
</invalid>
<invalid>

<AAA>
  ccc
</AAA>
</invalid>
</testCase>
<testCase>
<correct>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
<pattern id="Test_integer">
<rule context="AAA">
<report test="floor(.) = number(.)">O.K.</report>
<assert test="floor(.) = number(.)">The AAA value is not an integer.</assert>
</rule>
</pattern>
</schema></correct>
<invalid>

<AAA>
aaa
</AAA>
</invalid>
<invalid>

<AAA>
 12.234
</AAA>
</invalid>
<invalid>

<AAA>
45
</AAA>
</invalid>
<invalid>

<AAA>
0
</AAA>
</invalid>
<invalid>

<AAA>
-45
</AAA>
</invalid>
</testCase>
<testCase>
<correct>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
<pattern id="Test_count">
<rule context="/*">
<report test="count(//BBB) = count(//AAA)">O.K.</report>
<assert test="count(//BBB) &lt;= count(//AAA)">Some AAA are missing</assert>
<report test="count(//BBB) &lt; count(//AAA)">Some BBB are missing</report>
</rule>
</pattern>
</schema></correct>
<invalid>

<XXX>
	<BBB/>
	<BBB/>
	<AAA/>
	<BBB/>
	<AAA/>
	<AAA/>
</XXX>
</invalid>
<invalid>

<XXX>
	<BBB/>
	<AAA/>
	<BBB/>
	<AAA/>
	<AAA/>
</XXX>
</invalid>
<invalid>

<XXX>
	<BBB/>
	<BBB/>
	<AAA/>
	<BBB/>
	<AAA/>
</XXX>
</invalid>
</testCase>
<testCase>
<correct>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
<pattern id="Test_attribute">
<rule context="CCC">
<report test="parent::BBB and not(@id)">Attribute id is missing</report>
<report test="not(parent::BBB) and @id">Attribute id is used in wrong context</report>
</rule>
</pattern>
</schema></correct>
<valid>

<AAA>
	<CCC/>
	<CCC/>
	<BBB>
		<CCC id="Q1"/>
	</BBB>
</AAA>
</valid>
<invalid>

<AAA>
	<CCC id="Q2"/>
	<CCC/>
	<BBB>
		<CCC id="Q1"/>
	</BBB>
</AAA>
</invalid>
<invalid>

<AAA>
	<CCC/>
	<CCC/>
	<BBB>
		<CCC/>
	</BBB>
</AAA>
</invalid>
</testCase>
<testCase>
<correct>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
<pattern id="Character_arobase_forbidden">
<rule context="*">
<report test="contains(.,'@')">Text in element <name/> must not contain character @</report>
</rule>
</pattern>
</schema></correct>
<valid>

<AAA>
	<BBB>bbbb</BBB>
	<CCC>cccc</CCC>
</AAA>
</valid>
<invalid>

<AAA>
	<BBB>bbbb@bbb.com</BBB>
	<CCC>ccc@ccc.com</CCC>
</AAA>
</invalid>
<invalid>

<AAA>
	<BBB>bbbb</BBB>
	<CCC>cccc</CCC>
	aaa@aaa.net
</AAA>
</invalid>
</testCase>
<testCase>
<correct>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
<pattern id="Attributes_present">
<rule context="BBB">
<assert test="not(@aaa) or (@aaa and @bbb)">The element must not have an isolated aaa attribute</assert>
<assert test="not(@bbb) or (@aaa and @bbb)">The element must not have an isolated bbb attribute</assert>
</rule>
</pattern>
</schema></correct>
<valid>

<AAA>
	<BBB aaa="A" bbb="B"/>
</AAA>
</valid>
<invalid>

<AAA>
	<BBB bbb="B"/>
</AAA>
</invalid>
<invalid>

<AAA>
	<BBB aaa="A"/>
</AAA>
</invalid>
<valid>

<AAA>
	<BBB/>
</AAA>
</valid>
</testCase>
<testCase>
<correct>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
<pattern id="Number_of_characters_in_an_abbreviation">
<rule context="BBB">
<report test="string-length(@bbb) &lt; 2">There is not enough letters in the abbreviation</report>
<report test="string-length(@bbb) &gt; 3">There is too much letters in the abbreviation</report>
</rule>
</pattern>
</schema></correct>
<invalid>

<AAA>
	<BBB bbb="C"/>
</AAA>
</invalid>
<valid>

<AAA>
	<BBB bbb="CZ"/>
</AAA>
</valid>
<invalid>

<AAA>
	<BBB bbb="CZCZ"/>
</AAA>
</invalid>
</testCase>
<testCase>
<correct>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
<pattern id="Sum_equals_100_percent.">
<rule context="Total">
<assert test="sum(//Percent) = 100">The values do not sum to 100%. </assert>
</rule>
</pattern>
</schema></correct>
<invalid>

<Total>
	<Percent>20</Percent>
	<Percent>30</Percent>
	<Percent>10</Percent>
	<Percent>50</Percent>		
</Total>
</invalid>
<invalid>

<Total>
	<Percent>20</Percent>
	<Percent>10</Percent>
	<Percent>50</Percent>		
</Total>
</invalid>
<valid>

<Total>
	<Percent>20</Percent>
	<Percent>30</Percent>
	<Percent>50</Percent>		
</Total>
</valid>
</testCase>
<testCase>
<correct>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
<pattern id="a_child_of_selected_elements">
<rule context="CCC">
<assert test="parent::*[name()='BBB' or name()='DDD']">Element CCC must not be a child of element <name path="parent::*"/> </assert>
</rule>
</pattern>
</schema></correct>
<invalid>

<AAA>
	<BBB>
		<CCC/>
	</BBB>
	<CCC/>
	<DDD>
		<CCC/>
		<EEE>
			<CCC/>
		</EEE>
	</DDD>
</AAA>
</invalid>
</testCase>
<testCase>
<correct>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
<pattern id="id_is_the_only_permited_attribute_name">
<rule context="*">
<report test="@*[not(name()='id')]">Atrribute <name path="@*[not(name()='id')]"/> is forbidden in element <name/> </report>
</rule>
</pattern>
</schema></correct>
<invalid>

<AAA name="aaa">
<BBB id="bbb"/>
<CCC color="ccc"/>
</AAA>
</invalid>
</testCase>
<testCase>
<correct>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
<pattern id="Required_ID">
    <rule context="cat | dog">
        <assert test="@id">An element of type <name/> should have an id attribute that is a unique identifier for that animal.</assert>
    </rule>
</pattern>

<pattern id="Required_IDREF">
	<rule context="catowner">
	   <assert test="@pet">An element of type <name/> should have a pet attribute.</assert>
	</rule>
</pattern>

<pattern id="IDREF_should_reference_an_ID_used_in_the_same_document">
	<rule context="catowner[@pet]">
		<assert test="id(@pet)">An element of type <name/> should have a pet attribute that should contain a unique identifier.</assert>
	</rule>
</pattern>

<pattern id="IDREF_should_reference_an_ID_of_a_certain_element_type_only">
	<rule context="catowner[@pet]">
		<assert test="(name(id(@pet)) ='cat')">An element of type <name/> should have a pet attribute that should contain the unique identifier for a cat.</assert>
	</rule>
</pattern>
</schema></correct>
<invalid dtd="
&lt;!DOCTYPE ideg
[
&lt;!ELEMENT ideg    ( dog, cat, catowner+ )>
&lt;!ELEMENT dog     ( #PCDATA )>
&lt;!ELEMENT cat      ( #PCDATA )>
&lt;!ELEMENT catowner ( #PCDATA )>
&lt;!ATTLIST dog  id ID #REQUIRED >
&lt;!ATTLIST cat   id ID #REQUIRED >
&lt;!ATTLIST catowner  pet IDREF #REQUIRED>
]>">
<ideg>
        <dog  id="danny"            >Danny</dog>
        <cat   id="bede"              >Bede</cat>
        <catowner >Harold</catowner>
        <catowner pet="poochi" >Fumiaki</catowner>
        <catowner pet="danny"   >Jimmy</catowner>
        <catowner pet="bede"    >Rick</catowner>
</ideg>

</invalid>
</testCase>
<testCase>
<resource name="source1.xml">

<list>
	<author id="a1">Alice</author>
	<author id="p1">Paul</author>	
	<author id="p2">Peter</author>
</list>
</resource>
<correct>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
<pattern id="Compare_with_the_database">
    <rule context="author">
				<assert test="document('source1.xml')//author[@id=current()/@id]">The author is not in the database </assert>       
    </rule>
</pattern>

</schema></correct>
<invalid>

<list>
	<author id="a1"/>
	<author id="a2"/>
	<author id="p1"/>	
	<author id="p2"/>
</list>
</invalid>
</testCase>
<testCase>
<resource name="source1.xml">
<list>
	<Alice/>
	<Peter/>
	<Paul/>
</list>
</resource>
<correct>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
<pattern id="Start_of_paragraph_restriction.">
    <rule context="p">
				<assert test="document('source1.xml')//*[name()=substring-before(current(),' ')]">The word at the beginning of sentence is not listed in XML 1.</assert>       
    </rule>
</pattern>

</schema></correct>

<invalid>

<Document>
	<p>Alice is a nice girl.</p>
	<p>Where is Peter.</p>
	<p>Paul was invited.</p>
	<p>But Paul did not come.</p>
</Document>
</invalid>
</testCase>
<testCase>
<!-- TC kept for historic purposes, but invalid XPath "foo bar" can't be tested with XSLT 2.0: it raises a runtime error -->
<correct>
<schema xmlns="http://purl.oclc.org/dsdl/schematron" queryBinding="xslt2">
<pattern id="foo">
<rule context="foo|bar">
  <assert test="whatever">xxx</assert>
</rule>
</pattern>
</schema>
</correct>
</testCase>
</testSuite>